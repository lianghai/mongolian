c Keyman keyboard generated by ImportKeyboard
c Imported: 2020-02-26 10:56:31
c 
c Source Keyboard File: KBDMON.DLL
c Source KeyboardID: 00000450
c 
c 
c Run by: Liang Hai


store(&VERSION) '10.0'
store(&NAME) 'Mongol Bichig'
store(&VISUALKEYBOARD) 'mongol_bichig.kvks'
store(&BITMAP) 'mongol_bichig.ico'
store(&LAYOUTFILE) 'mongol_bichig.keyman-touch-layout'
store(&COPYRIGHT) '© 2020 Liang Hai'
store(&KEYBOARDVERSION) '0.1'
store(&TARGETS) 'any'


begin Unicode > use(main)


group(main) using keys


c # Basic stores
c # ------------

store(o) 'ᠣ'
store(u) 'ᠤ'
store(oe) 'ᠥ'
store(ue) 'ᠦ'

store(aleph)  '᠇'
store(nirugu) '᠊'

store(MVS)   U+180e
store(NNBSP) U+202f
store(FVS1)  U+180b
store(FVS2)  U+180c
store(FVS3)  U+180d

store(vowel.masculine) 'ᠠ' 'ᠣ' 'ᠤ'
store(vowel.feminine)  'ᠡ' 'ᠧ' 'ᠥ' 'ᠦ'
store(vowel.neuter)    'ᠢ'

store(vowel) \
  outs(vowel.masculine) outs(vowel.feminine) outs(vowel.neuter)

store(consonant) \
  'ᠨ' 'ᠩ' 'ᠪ' 'ᠫ' 'ᠬ' 'ᠭ' 'ᠮ' 'ᠯ' 'ᠰ' 'ᠱ' 'ᠲ' 'ᠳ' 'ᠴ' 'ᠵ' 'ᠶ' 'ᠷ' 'ᠸ' \
  'ᠹ' 'ᠻ' 'ᠼ' 'ᠽ' 'ᠾ' 'ᠿ' 'ᡀ' 'ᡁ' 'ᡂ' \
  $aleph

store(letter) \
  outs(vowel) outs(consonant)


c # Basic layout, including modifiers and sequences
c # -----------------------------------------------

store(letter_key) \
  [K_Q] [K_W] [K_E] [K_R] [SHIFT K_R] [K_T] [SHIFT K_T] [K_Y] [K_U] [K_I] [K_O] [K_P] [K_LBRKT] [SHIFT K_RBRKT] \
  [K_A] [K_D] [K_F] [K_G] [K_H] [SHIFT K_H] [K_J] [K_K] [K_L] [K_COLON] [K_QUOTE] \
  [K_X] [K_V] [K_B] [K_N] [K_M] [K_PERIOD]

store(letter_key.output) \
  'ᠹ' 'ᠼ' $u 'ᠵ' 'ᠿ' 'ᠡ' 'ᠧ' 'ᠨ' 'ᠭ' 'ᠱ' $ue 'ᠽ' 'ᠻ' $aleph \
  'ᠶ' 'ᠪ' $oe 'ᠠ' 'ᠬ' 'ᠾ' 'ᠷ' $o 'ᠯ' 'ᠳ' 'ᠫ' \
  'ᠴ' 'ᠰ' 'ᠮ' 'ᠢ' 'ᠲ' 'ᠸ'

store(nirugu_key) [K_RBRKT]

c Prioritized sequences:

'ᠯ' $nirugu + [SHIFT K_H] > 'ᡀ' context(2)

c General letter keys:

any(letter) $nirugu + any(letter_key) > context(1) index(letter_key.output, 3) context(2)
                    + any(letter_key) >            index(letter_key.output, 1) $nirugu


c ## Row 1

+ [K_BKQUOTE] > '='
+ [SHIFT K_BKQUOTE] > '+'

+ [K_1] > '№'
+ [SHIFT K_1] > '1'

+ [K_2] > '-'
+ [SHIFT K_2] > '2'

+ [K_3] > '"'
+ [SHIFT K_3] > '3'

+ [K_4] > '₮'
+ [SHIFT K_4] > '4'

+ [K_5] > ':'
+ [SHIFT K_5] > '5'

+ [K_6] > '.'
+ [SHIFT K_6] > '6'

+ [K_7] > '_'
+ [SHIFT K_7] > '7'

+ [K_8] > ','
+ [SHIFT K_8] > '8'

+ [K_9] > '%'
+ [SHIFT K_9] > '9'

+ [K_0] > '?'
+ [SHIFT K_0] > '0'

+ [K_HYPHEN] > nul
+ [SHIFT K_HYPHEN] > nul

+ [K_EQUAL] > nul
+ [SHIFT K_EQUAL] > nul

c [K_BKSLASH] is located here in the MNS 4332: 1996 layout,
c   but is located at the end of row 2 in the US English layout.


c ## Row 2

c + [K_Q] > 'ᠹ'

c + [K_W] > 'ᠼ'

c + [K_E] > $u

c + [K_R] > 'ᠵ'
c + [SHIFT K_R] > 'ᠿ'

c + [K_T] > 'ᠡ'
c + [SHIFT K_T] > 'ᠧ'

c + [K_Y] > 'ᠨ'

c + [K_U] > 'ᠭ'

c + [K_I] > 'ᠱ'

c + [K_O] > $ue

c + [K_P] > 'ᠽ'

c + [K_LBRKT] > 'ᠻ'

+ [K_RBRKT] > $nirugu
c + [SHIFT K_RBRKT] > $aleph

+ [K_BKSLASH] > '\'  c Located at the end of row 1 in the MNS 4332: 1996 layout.
+ [SHIFT K_BKSLASH] > '|'


c ## Row 3

c + [K_A] > 'ᠶ'

+ [K_S] > nul
+ [SHIFT K_S] > nul

c + [K_D] > 'ᠪ'

c + [K_F] > $oe

c + [K_G] > 'ᠠ'

c + [K_H] > 'ᠬ'
c + [SHIFT K_H] > 'ᠾ'

c + [K_J] > 'ᠷ'

c + [K_K] > $o

c + [K_L] > 'ᠯ'

c + [K_COLON] > 'ᠳ'
c c K_COLON is actually for ';'.

c + [K_QUOTE] > 'ᠫ'


c ## Row 4

+ [K_Z] > nul
+ [SHIFT K_Z] > nul

c + [K_X] > 'ᠴ'

+ [K_C] > nul
+ [SHIFT K_C] > nul

c + [K_V] > 'ᠰ'

c + [K_B] > 'ᠮ'

c + [K_N] > 'ᠢ'

c + [K_M] > 'ᠲ'

+ [K_COMMA] > nul
+ [SHIFT K_COMMA] > nul

c + [K_PERIOD] > 'ᠸ'

+ [K_SLASH] > nul
+ [SHIFT K_SLASH] > nul


c ## Row 5

+ [K_SPACE] > ' '
+ [SHIFT K_SPACE] > $NNBSP


c # Rotas! Yay!
c # -----------

store(next) [K_SLASH]


c ## Devsgers (syllable codas)

c .medi/fina

'ᠨ'         + outs(next) > 'ᠩ'
'ᠨ' $nirugu + outs(next) > 'ᠩ' context(2)
'ᠩ'         + outs(next) > 'ᠨ'
'ᠩ' $nirugu + outs(next) > 'ᠨ' context(2)

'ᠳ'               + outs(next) > context(1) $FVS1
'ᠳ'       $nirugu + outs(next) > context(1) $FVS1 context(2)
'ᠳ' $FVS1         + outs(next) > context(1)
'ᠳ' $FVS1 $nirugu + outs(next) > context(1)       context(3)

c Letter g has an alternative devsger form only after i:

'ᠢ' 'ᠭ'               + outs(next) > context(1) context(2) $FVS1
'ᠢ' 'ᠭ'       $nirugu + outs(next) > context(1) context(2) $FVS1 context(3)
'ᠢ' 'ᠭ' $FVS1         + outs(next) > context(1) context(2)
'ᠢ' 'ᠭ' $FVS1 $nirugu + outs(next) > context(1) context(2)       context(4)


c ## (C)V syllables

c .isol

'ᠠ'       + outs(next) > context(1) $FVS1
'ᠠ' $FVS1 + outs(next) > context(1)

'ᠦ'       + outs(next) > context(1) $FVS1
'ᠦ' $FVS1 + outs(next) > context(1)

c .medi/fina

'ᠲ'       any(vowel)         + outs(next) > context(1) $FVS1 context(2)
'ᠲ'       any(vowel) $nirugu + outs(next) > context(1) $FVS1 context(2) context(3)
'ᠲ' $FVS1 any(vowel)         + outs(next) > context(1)       context(3)
'ᠲ' $FVS1 any(vowel) $nirugu + outs(next) > context(1)       context(3) context(4)

c .isol/init

'ᠳ'       any(vowel)         + outs(next) > context(1) $FVS1 context(2)
'ᠳ'       any(vowel) $nirugu + outs(next) > context(1) $FVS1 context(2) context(3)
'ᠳ' $FVS1 any(vowel)         + outs(next) > context(1)       context(3)
'ᠳ' $FVS1 any(vowel) $nirugu + outs(next) > context(1)       context(3) context(4)

c .fina

store(vowel.4567) $o $u $oe $ue

any(consonant) any(vowel.4567)       + outs(next) > context(1) context(2) $FVS1
any(consonant) any(vowel.4567) $FVS1 + outs(next) > context(1) context(2)

c The section above overlaps with the preceding one and needs handling.
c The possible FVS between consonant and vowel.rounded needs to be ignored.


c ### Chachlag

c .fina

store(vowel.12) 'ᠠ' 'ᠡ'
store(consonant.h_g) 'ᠬ' 'ᠭ'
store(consonant.n_m_l_y_r_w) 'ᠨ' 'ᠮ' 'ᠯ' 'ᠶ' 'ᠷ' 'ᠸ'

any(consonant.h_g)         'ᠠ'           $nirugu + [K_BKSP] > context(1) $MVS context(2)
any(consonant.n_m_l_y_r_w) any(vowel.12) $nirugu + [K_BKSP] > context(1) $MVS context(2)

any(consonant.h_g)              'ᠠ'           + outs(next) > context(1) $MVS context(2)
any(consonant.h_g)         $MVS 'ᠠ'           + outs(next) > context(1)      context(3)
any(consonant.n_m_l_y_r_w)      any(vowel.12) + outs(next) > context(1) $MVS context(2)
any(consonant.n_m_l_y_r_w) $MVS any(vowel.12) + outs(next) > context(1)      context(3)

any(consonant.h_g)         $MVS 'ᠠ'           + outs(nirugu_key) > context(1) context(3) $nirugu
any(consonant.n_m_l_y_r_w) $MVS any(vowel.12) + outs(nirugu_key) > context(1) context(3) $nirugu

c ### Mandarin transcriptions

c .isol

'ᠵ' 'ᠢ' + outs(next) > 'ᡁ' context(2)
'ᡁ' 'ᠢ' + outs(next) > 'ᠵ' context(2)

'ᠴ' 'ᠢ' + outs(next) > 'ᡂ' context(2)
'ᡂ' 'ᠢ' + outs(next) > 'ᠴ' context(2)

'ᠰ' 'ᠢ' + outs(next) > 'ᠱ' context(2)
'ᠱ' 'ᠢ' + outs(next) > 'ᠰ' context(2)

'ᠷ' 'ᠢ' + outs(next) > 'ᠿ' context(2)
'ᠿ' 'ᠢ' + outs(next) > 'ᠷ' context(2)
